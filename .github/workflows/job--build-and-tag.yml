name: Build and tag CIMonitor container
on:
  workflow_call:
    inputs:
      BASE_IMAGE:
        description: Base build of what docker image
        required: true
        type: string
      DOCKER_DIRECTORY:
        description: Directory to get the docker files from
        required: true
        type: string
      QEMU_ARCH:
        description: QEMU architecture to emulate
        required: false
        type: string
        default: none
      DOCKER_IMAGE:
        description: Docker image tag to push into the docker hub
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_TOKEN:
        required: true
jobs:
  build-and-tag-container:
    name: build & tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Install development dependencies
        run: yarn install --ignore-scripts

      - name: Build javascript application
        run: yarn build

      - name: Install production dependencies
        run: yarn install --production --ignore-scripts

      - name : Install QEMU emulator
        if: ${{ inputs.QEMU_ARCH != 'none' }}
        run: |
          wget -q https://github.com/multiarch/qemu-user-static/releases/download/v3.0.0/x86_64_qemu-${{ inputs.QEMU_ARCH }}-static.tar.gz
          tar xfvz x86_64_qemu-${{ inputs.QEMU_ARCH }}-static.tar.gz
          docker run --rm --privileged multiarch/qemu-user-static:register --reset

      - name: Copy Docker files
        run: cp ${{ inputs.DOCKER_DIRECTORY }}/Dockerfile ${{ inputs.DOCKER_DIRECTORY }}/.dockerignore .

      - name: Build CIMonitor image
        run: docker build --target production --tag ${{ inputs.DOCKER_IMAGE }} --build-arg BASE_IMAGE=${{ inputs.BASE_IMAGE }} --build-arg QEMU_BINARY=qemu-${{ inputs.QEMU_ARCH }}-static .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push docker image to the hub
        run: docker push ${{ inputs.DOCKER_IMAGE }}
